{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Canvas_colorPlugins, _Canvas_context, _Canvas_postDrawUpdaters, _Canvas_preDrawUpdaters, _Canvas_resizePlugins;\n\nimport { clear as _clear, drawParticle as _drawParticle, drawParticlePlugin as _drawParticlePlugin, drawPlugin as _drawPlugin, paintBase as _paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\n\nfunction setTransformValue(factor, newFactor, key) {\n  var _a;\n\n  var newValue = newFactor[key];\n\n  if (newValue !== undefined) {\n    factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n  }\n}\n\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n\n    this.container = container;\n\n    _Canvas_colorPlugins.set(this, void 0);\n\n    _Canvas_context.set(this, void 0);\n\n    _Canvas_postDrawUpdaters.set(this, void 0);\n\n    _Canvas_preDrawUpdaters.set(this, void 0);\n\n    _Canvas_resizePlugins.set(this, void 0);\n\n    this.size = {\n      height: 0,\n      width: 0\n    };\n\n    __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n\n    this.generatedCanvas = false;\n\n    __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n\n    __classPrivateFieldSet(this, _Canvas_colorPlugins, [], \"f\");\n  }\n\n  _createClass(Canvas, [{\n    key: \"clear\",\n    value: function clear() {\n      var _this = this;\n\n      var options = this.container.actualOptions,\n          trail = options.particles.move.trail;\n\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n      } else {\n        this.draw(function (ctx) {\n          _clear(ctx, _this.size);\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      } else {\n        this.resetOriginalStyle();\n      }\n\n      this.draw(function (ctx) {\n        _clear(ctx, _this2.size);\n      });\n\n      __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n\n      __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n\n      __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n\n      __classPrivateFieldSet(this, _Canvas_colorPlugins, [], \"f\");\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n        return;\n      }\n\n      return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this3 = this;\n\n      var _a;\n\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n\n      var radius = particle.getRadius();\n\n      if (radius <= 0) {\n        return;\n      }\n\n      var pfColor = particle.getFillColor(),\n          psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n\n      var _this$getPluginPartic = this.getPluginParticleColors(particle),\n          _this$getPluginPartic2 = _slicedToArray(_this$getPluginPartic, 2),\n          fColor = _this$getPluginPartic2[0],\n          sColor = _this$getPluginPartic2[1];\n\n      if (!fColor) {\n        fColor = pfColor;\n      }\n\n      if (!sColor) {\n        sColor = psColor;\n      }\n\n      if (!fColor && !sColor) {\n        return;\n      }\n\n      this.draw(function (ctx) {\n        var _a, _b, _c, _d, _e;\n\n        var options = _this3.container.actualOptions,\n            zIndexOptions = particle.options.zIndex,\n            zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n            opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1,\n            strokeOpacity = (_e = (_d = particle.stroke) === null || _d === void 0 ? void 0 : _d.opacity) !== null && _e !== void 0 ? _e : opacity,\n            zOpacity = opacity * zOpacityFactor,\n            zStrokeOpacity = strokeOpacity * zOpacityFactor,\n            transform = {},\n            colorStyles = {\n          fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n        };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n\n        _this3.applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n\n        _drawParticle({\n          container: _this3.container,\n          context: ctx,\n          particle: particle,\n          delta: delta,\n          colorStyles: colorStyles,\n          backgroundMask: options.backgroundMask.enable,\n          composite: options.backgroundMask.composite,\n          radius: radius * Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n          opacity: zOpacity,\n          shadow: particle.options.shadow,\n          transform: transform\n        });\n\n        _this3.applyPostDrawUpdaters(particle);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        _drawParticlePlugin(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        _drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.resize();\n      this.initStyle();\n      this.initCover();\n      this.initTrail();\n      this.initBackground();\n      this.initUpdaters();\n      this.initPlugins();\n      this.paint();\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n          background = options.background,\n          element = this.element,\n          elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n      if (!elementStyle) {\n        return;\n      }\n\n      if (background.color) {\n        var color = rangeColorToRgb(background.color);\n        elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"initPlugins\",\n    value: function initPlugins() {\n      __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n\n      var _iterator = _createForOfIteratorHelper(this.container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          if (plugin.resize) {\n            __classPrivateFieldGet(this, _Canvas_resizePlugins, \"f\").push(plugin);\n          }\n\n          if (plugin.particleFillColor || plugin.particleStrokeColor) {\n            __classPrivateFieldGet(this, _Canvas_colorPlugins, \"f\").push(plugin);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"initUpdaters\",\n    value: function initUpdaters() {\n      __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n\n      __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n\n      var _iterator2 = _createForOfIteratorHelper(this.container.particles.updaters),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var updater = _step2.value;\n\n          if (updater.afterDraw) {\n            __classPrivateFieldGet(this, _Canvas_postDrawUpdaters, \"f\").push(updater);\n          }\n\n          if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n            __classPrivateFieldGet(this, _Canvas_preDrawUpdaters, \"f\").push(updater);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.generatedCanvas = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n\n      __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this4 = this;\n\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          _clear(ctx, _this4.size);\n\n          _this4.paintBase(_this4.coverColorStyle);\n        } else {\n          _this4.paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container,\n          pxRatio = container.retina.pixelRatio,\n          size = container.canvas.size,\n          newSize = {\n        width: this.element.offsetWidth * pxRatio,\n        height: this.element.offsetHeight * pxRatio\n      };\n\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var container, needsRefresh;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.element) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.resize();\n                container = this.container, needsRefresh = container.updateActualOptions();\n                container.particles.setDensity();\n                this.applyResizePlugins();\n\n                if (!needsRefresh) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 9;\n                return container.refresh();\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n\n      return windowResize;\n    }()\n  }, {\n    key: \"applyPostDrawUpdaters\",\n    value: function applyPostDrawUpdaters(particle) {\n      var _a;\n\n      var _iterator3 = _createForOfIteratorHelper(__classPrivateFieldGet(this, _Canvas_postDrawUpdaters, \"f\")),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var updater = _step3.value;\n          (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"applyPreDrawUpdaters\",\n    value: function applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n      var _a;\n\n      var _iterator4 = _createForOfIteratorHelper(__classPrivateFieldGet(this, _Canvas_preDrawUpdaters, \"f\")),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var updater = _step4.value;\n\n          if (updater.getColorStyles) {\n            var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n                fill = _updater$getColorStyl.fill,\n                stroke = _updater$getColorStyl.stroke;\n\n            if (fill) {\n              colorStyles.fill = fill;\n            }\n\n            if (stroke) {\n              colorStyles.stroke = stroke;\n            }\n          }\n\n          if (updater.getTransformValues) {\n            var updaterTransform = updater.getTransformValues(particle);\n\n            for (var key in updaterTransform) {\n              setTransformValue(transform, updaterTransform, key);\n            }\n          }\n\n          (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"applyResizePlugins\",\n    value: function applyResizePlugins() {\n      var _a;\n\n      var _iterator5 = _createForOfIteratorHelper(__classPrivateFieldGet(this, _Canvas_resizePlugins, \"f\")),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var plugin = _step5.value;\n          (_a = plugin.resize) === null || _a === void 0 ? void 0 : _a.call(plugin);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"getPluginParticleColors\",\n    value: function getPluginParticleColors(particle) {\n      var fColor, sColor;\n\n      var _iterator6 = _createForOfIteratorHelper(__classPrivateFieldGet(this, _Canvas_colorPlugins, \"f\")),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var plugin = _step6.value;\n\n          if (!fColor && plugin.particleFillColor) {\n            fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n          }\n\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n          }\n\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"initCover\",\n    value: function initCover() {\n      var options = this.container.actualOptions,\n          cover = options.backgroundMask.cover,\n          color = cover.color,\n          coverRgb = rangeColorToRgb(color);\n\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"initStyle\",\n    value: function initStyle() {\n      var element = this.element,\n          options = this.container.actualOptions;\n\n      if (!element) {\n        return;\n      }\n\n      if (options.fullScreen.enable) {\n        this.originalStyle = deepExtend({}, element.style);\n        element.style.setProperty(\"position\", \"fixed\", \"important\");\n        element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n        element.style.setProperty(\"top\", \"0\", \"important\");\n        element.style.setProperty(\"left\", \"0\", \"important\");\n        element.style.setProperty(\"width\", \"100%\", \"important\");\n        element.style.setProperty(\"height\", \"100%\", \"important\");\n      } else {\n        this.resetOriginalStyle();\n      }\n\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n\n        var value = options.style[key];\n\n        if (!value) {\n          continue;\n        }\n\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"initTrail\",\n    value: function initTrail() {\n      var options = this.container.actualOptions,\n          trail = options.particles.move.trail,\n          fillColor = rangeColorToRgb(trail.fillColor);\n\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this.trailFillColor = {\n          r: fillColor.r,\n          g: fillColor.g,\n          b: fillColor.b,\n          a: 1 / _trail.length\n        };\n      }\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      var _this5 = this;\n\n      this.draw(function (ctx) {\n        _paintBase(ctx, _this5.size, baseColor);\n      });\n    }\n  }, {\n    key: \"resetOriginalStyle\",\n    value: function resetOriginalStyle() {\n      var element = this.element,\n          originalStyle = this.originalStyle;\n\n      if (element && originalStyle) {\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n      }\n    }\n  }]);\n\n  return Canvas;\n}();\n_Canvas_colorPlugins = new WeakMap(), _Canvas_context = new WeakMap(), _Canvas_postDrawUpdaters = new WeakMap(), _Canvas_preDrawUpdaters = new WeakMap(), _Canvas_resizePlugins = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Canvas_colorPlugins","_Canvas_context","_Canvas_postDrawUpdaters","_Canvas_preDrawUpdaters","_Canvas_resizePlugins","clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","deepExtend","generatedAttribute","setTransformValue","factor","newFactor","key","_a","newValue","undefined","Canvas","container","size","height","width","generatedCanvas","options","actualOptions","trail","particles","move","backgroundMask","enable","paint","length","trailFillColor","draw","ctx","element","remove","resetOriginalStyle","cb","particle","delta","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","getPluginParticleColors","fColor","sColor","_b","_c","_d","_e","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","opacity","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","transform","colorStyles","fill","applyPreDrawUpdaters","context","composite","sizeRate","shadow","applyPostDrawUpdaters","plugin","resize","initStyle","initCover","initTrail","initBackground","initUpdaters","initPlugins","background","elementStyle","style","color","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","plugins","push","particleFillColor","particleStrokeColor","updaters","updater","afterDraw","getColorStyles","getTransformValues","beforeDraw","canvas","dataset","originalStyle","offsetHeight","offsetWidth","getContext","retina","init","cover","coverColorStyle","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","applyResizePlugins","refresh","updaterTransform","coverRgb","coverColor","r","g","b","a","fullScreen","setProperty","toString","fillColor","baseColor","top","left","WeakMap"],"sources":["/Users/lasnak/portfolio/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Canvas_colorPlugins, _Canvas_context, _Canvas_postDrawUpdaters, _Canvas_preDrawUpdaters, _Canvas_resizePlugins;\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        _Canvas_colorPlugins.set(this, void 0);\n        _Canvas_context.set(this, void 0);\n        _Canvas_postDrawUpdaters.set(this, void 0);\n        _Canvas_preDrawUpdaters.set(this, void 0);\n        _Canvas_resizePlugins.set(this, void 0);\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n        this.generatedCanvas = false;\n        __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_colorPlugins, [], \"f\");\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n        __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_colorPlugins, [], \"f\");\n    }\n    draw(cb) {\n        if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n            return;\n        }\n        return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d, _e;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_e = (_d = particle.stroke) === null || _d === void 0 ? void 0 : _d.opacity) !== null && _e !== void 0 ? _e : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this.applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this.applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        __classPrivateFieldSet(this, _Canvas_resizePlugins, [], \"f\");\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                __classPrivateFieldGet(this, _Canvas_resizePlugins, \"f\").push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                __classPrivateFieldGet(this, _Canvas_colorPlugins, \"f\").push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        __classPrivateFieldSet(this, _Canvas_preDrawUpdaters, [], \"f\");\n        __classPrivateFieldSet(this, _Canvas_postDrawUpdaters, [], \"f\");\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                __classPrivateFieldGet(this, _Canvas_postDrawUpdaters, \"f\").push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                __classPrivateFieldGet(this, _Canvas_preDrawUpdaters, \"f\").push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this.applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of __classPrivateFieldGet(this, _Canvas_postDrawUpdaters, \"f\")) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of __classPrivateFieldGet(this, _Canvas_preDrawUpdaters, \"f\")) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    applyResizePlugins() {\n        var _a;\n        for (const plugin of __classPrivateFieldGet(this, _Canvas_resizePlugins, \"f\")) {\n            (_a = plugin.resize) === null || _a === void 0 ? void 0 : _a.call(plugin);\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of __classPrivateFieldGet(this, _Canvas_colorPlugins, \"f\")) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (options.fullScreen.enable) {\n            this.originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    resetOriginalStyle() {\n        const element = this.element, originalStyle = this.originalStyle;\n        if (element && originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n}\n_Canvas_colorPlugins = new WeakMap(), _Canvas_context = new WeakMap(), _Canvas_postDrawUpdaters = new WeakMap(), _Canvas_preDrawUpdaters = new WeakMap(), _Canvas_resizePlugins = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}