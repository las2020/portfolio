{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lasnak/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Particles_engine;\n\nimport { calcPositionFromSize, getRandom, getRangeMax, getRangeMin, getValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n\n    this.container = container;\n\n    _Particles_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n    var canvasSize = this.container.canvas.size;\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n    this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n  }\n\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n          options = container.actualOptions;\n\n      var _iterator = _createForOfIteratorHelper(options.manualParticles),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          this.addParticle(calcPositionFromSize({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group) {\n      var container = this.container,\n          options = container.actualOptions,\n          limit = options.particles.number.limit;\n\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n\n      return this.pushParticle(position, overrideOptions, group);\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent, splitParticlesOptions) {\n      var splitOptions = parent.options.destroy.split,\n          options = loadParticlesOptions(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.container, parent.options),\n          factor = getValue(splitOptions.factor);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n\n      options.load(splitParticlesOptions);\n      var offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0,\n          position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset)\n      };\n      return this.pushParticle(position, options, parent.group, function (particle) {\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = parent.splitCount + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.array = [];\n      this.zArray = [];\n      this.movers = [];\n      this.updaters = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(delta) {\n        var container, canvasSize, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, p;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, canvasSize = this.container.canvas.size;\n                this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n                container.canvas.clear();\n                _context.next = 5;\n                return this.update(delta);\n\n              case 5:\n                if (this.needsSort) {\n                  this.zArray.sort(function (a, b) {\n                    return b.position.z - a.position.z || a.id - b.id;\n                  });\n                  this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                  this.needsSort = false;\n                }\n\n                _iterator2 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                    container.canvas.drawPlugin(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                _iterator3 = _createForOfIteratorHelper(this.zArray);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    p = _step3.value;\n                    p.draw(delta);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function draw(_x) {\n        return _draw.apply(this, arguments);\n      }\n\n      return draw;\n    }()\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var range = setRangeValue(p1.id, p2.id),\n          key = \"\".concat(getRangeMin(range), \"_\").concat(getRangeMax(range));\n      var res = this.freqs.links.get(key);\n\n      if (res === undefined) {\n        res = getRandom();\n        this.freqs.links.set(key, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n          id1 = _ref[0],\n          id2 = _ref[1],\n          id3 = _ref[2];\n\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.freqs.triangles.get(key);\n\n      if (res === undefined) {\n        res = getRandom();\n        this.freqs.triangles.set(key, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      this.freqs.links = new Map();\n      this.freqs.triangles = new Map();\n      var handled = false;\n      this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n\n      var _iterator4 = _createForOfIteratorHelper(container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this.interactionManager.init();\n\n      var _iterator5 = _createForOfIteratorHelper(container.pathGenerators),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              pathGenerator = _step5$value[1];\n\n          pathGenerator.init(container);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.addManualParticles();\n\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n\n      this.pushing = false;\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.clear();\n                this.init();\n                _context2.next = 4;\n                return this.draw({\n                  value: 0,\n                  factor: 0\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n\n      return redraw;\n    }()\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!(index >= 0 && index <= this.count)) {\n        return;\n      }\n\n      var deleted = 0;\n\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        deleted++;\n\n        __classPrivateFieldGet(this, _Particles_engine, \"f\").dispatchEvent(\"particleRemoved\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n      }\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n\n      for (var group in options.particles.groups) {\n        this.applyDensity(options.particles.groups[group], 0, group);\n      }\n\n      this.applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(delta) {\n        var _a, _b, container, particlesToDelete, _iterator6, _step6, _step6$value, pathGenerator, _iterator7, _step7, _step7$value, plugin, _iterator8, _step8, _particle, resizeFactor, _iterator10, _step10, _step10$value, _plugin, _iterator11, _step11, mover, _i2, _particlesToDelete, particle, _iterator9, _step9, _particle2, _iterator12, _step12, updater;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = this.container, particlesToDelete = [];\n                _iterator6 = _createForOfIteratorHelper(container.pathGenerators);\n\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    _step6$value = _slicedToArray(_step6.value, 2), pathGenerator = _step6$value[1];\n                    pathGenerator.update();\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n\n                _iterator7 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    _step7$value = _slicedToArray(_step7.value, 2), plugin = _step7$value[1];\n                    (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n\n                _iterator8 = _createForOfIteratorHelper(this.array);\n                _context3.prev = 6;\n\n                _iterator8.s();\n\n              case 8:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context3.next = 41;\n                  break;\n                }\n\n                _particle = _step8.value;\n                resizeFactor = container.canvas.resizeFactor;\n\n                if (resizeFactor && !_particle.ignoresResizeRatio) {\n                  _particle.position.x *= resizeFactor.width;\n                  _particle.position.y *= resizeFactor.height;\n                }\n\n                _particle.ignoresResizeRatio = false;\n                _context3.next = 15;\n                return this.interactionManager.reset(_particle);\n\n              case 15:\n                _iterator10 = _createForOfIteratorHelper(this.container.plugins);\n                _context3.prev = 16;\n\n                _iterator10.s();\n\n              case 18:\n                if ((_step10 = _iterator10.n()).done) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _step10$value = _slicedToArray(_step10.value, 2), _plugin = _step10$value[1];\n\n                if (!_particle.destroyed) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                return _context3.abrupt(\"break\", 25);\n\n              case 22:\n                (_b = _plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(_plugin, _particle, delta);\n\n              case 23:\n                _context3.next = 18;\n                break;\n\n              case 25:\n                _context3.next = 30;\n                break;\n\n              case 27:\n                _context3.prev = 27;\n                _context3.t0 = _context3[\"catch\"](16);\n\n                _iterator10.e(_context3.t0);\n\n              case 30:\n                _context3.prev = 30;\n\n                _iterator10.f();\n\n                return _context3.finish(30);\n\n              case 33:\n                _iterator11 = _createForOfIteratorHelper(this.movers);\n\n                try {\n                  for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                    mover = _step11.value;\n\n                    if (mover.isEnabled(_particle)) {\n                      mover.move(_particle, delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator11.e(err);\n                } finally {\n                  _iterator11.f();\n                }\n\n                if (!_particle.destroyed) {\n                  _context3.next = 38;\n                  break;\n                }\n\n                particlesToDelete.push(_particle);\n                return _context3.abrupt(\"continue\", 39);\n\n              case 38:\n                this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n\n              case 39:\n                _context3.next = 8;\n                break;\n\n              case 41:\n                _context3.next = 46;\n                break;\n\n              case 43:\n                _context3.prev = 43;\n                _context3.t1 = _context3[\"catch\"](6);\n\n                _iterator8.e(_context3.t1);\n\n              case 46:\n                _context3.prev = 46;\n\n                _iterator8.f();\n\n                return _context3.finish(46);\n\n              case 49:\n                for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                  particle = _particlesToDelete[_i2];\n                  this.remove(particle);\n                }\n\n                _context3.next = 52;\n                return this.interactionManager.externalInteract(delta);\n\n              case 52:\n                _iterator9 = _createForOfIteratorHelper(container.particles.array);\n                _context3.prev = 53;\n\n                _iterator9.s();\n\n              case 55:\n                if ((_step9 = _iterator9.n()).done) {\n                  _context3.next = 64;\n                  break;\n                }\n\n                _particle2 = _step9.value;\n                _iterator12 = _createForOfIteratorHelper(this.updaters);\n\n                try {\n                  for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                    updater = _step12.value;\n                    updater.update(_particle2, delta);\n                  }\n                } catch (err) {\n                  _iterator12.e(err);\n                } finally {\n                  _iterator12.f();\n                }\n\n                if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                  _context3.next = 62;\n                  break;\n                }\n\n                _context3.next = 62;\n                return this.interactionManager.particlesInteract(_particle2, delta);\n\n              case 62:\n                _context3.next = 55;\n                break;\n\n              case 64:\n                _context3.next = 69;\n                break;\n\n              case 66:\n                _context3.prev = 66;\n                _context3.t2 = _context3[\"catch\"](53);\n\n                _iterator9.e(_context3.t2);\n\n              case 69:\n                _context3.prev = 69;\n\n                _iterator9.f();\n\n                return _context3.finish(69);\n\n              case 72:\n                delete container.canvas.resizeFactor;\n\n              case 73:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 43, 46, 49], [16, 27, 30, 33], [53, 66, 69, 72]]);\n      }));\n\n      function update(_x2) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"applyDensity\",\n    value: function applyDensity(options, manualCount, group) {\n      var _a;\n\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n\n      var numberOptions = options.number,\n          densityFactor = this.initDensityFactor(numberOptions.density),\n          optParticlesNumber = numberOptions.value,\n          optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n          particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n          particlesCount = Math.min(this.count, this.array.filter(function (t) {\n        return t.group === group;\n      }).length);\n      this.limit = numberOptions.limit * densityFactor;\n\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor(densityOptions) {\n      var container = this.container;\n\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n\n      var canvas = container.canvas.element,\n          pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"pushParticle\",\n    value: function pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n        var canAdd = true;\n\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n\n        if (!canAdd) {\n          return;\n        }\n\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n\n        __classPrivateFieldGet(this, _Particles_engine, \"f\").dispatchEvent(\"particleAdded\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n\n  return Particles;\n}();\n_Particles_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Particles_engine","calcPositionFromSize","getRandom","getRangeMax","getRangeMin","getValue","randomInRange","setRangeValue","InteractionManager","Particle","Point","QuadTree","Rectangle","loadParticlesOptions","Particles","engine","container","nextId","array","zArray","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","canvasSize","canvas","size","quadTree","width","height","movers","plugins","getMovers","updaters","getUpdaters","length","options","actualOptions","manualParticles","particle","addParticle","position","overrideOptions","group","particles","number","countToRemove","count","removeQuantity","pushParticle","parent","splitParticlesOptions","splitOptions","destroy","split","factor","color","load","hsl","getFillColor","min","max","offset","sizeOffset","x","y","velocity","splitCount","unbreakable","setTimeout","delta","clear","update","sort","a","b","z","id","plugin","drawPlugin","p","draw","p1","p2","range","key","res","undefined","p3","id1","id2","id3","mode","handleClickMode","_a","handled","init","particlesInitialization","pathGenerators","pathGenerator","addManualParticles","groups","groupOptions","i","j","nb","mouse","pushing","override","removeAt","indexOf","index","quantity","deleted","splice","zIdx","dispatchEvent","data","applyDensity","particlesToDelete","resizeFactor","ignoresResizeRatio","reset","destroyed","_b","particleUpdate","mover","isEnabled","move","push","insert","getPosition","remove","externalInteract","updater","spawning","particlesInteract","manualCount","density","enable","numberOptions","densityFactor","initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","Math","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","initializer","canAdd","e","console","warn","WeakMap"],"sources":["/Users/lasnak/portfolio/node_modules/tsparticles-engine/esm/Core/Particles.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Particles_engine;\nimport { calcPositionFromSize, getRandom, getRangeMax, getRangeMin, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        _Particles_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Particles_engine, engine, \"f\");\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager(__classPrivateFieldGet(this, _Particles_engine, \"f\"), container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getMovers(container, true);\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this.pushParticle(position, overrideOptions, group);\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        const splitOptions = parent.options.destroy.split, options = loadParticlesOptions(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.container, parent.options), factor = getValue(splitOptions.factor);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.pushParticle(position, options, parent.group, (particle) => {\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = parent.splitCount + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        const range = setRangeValue(p1.id, p2.id), key = `${getRangeMin(range)}_${getRangeMax(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = getRandom();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = getRandom();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = __classPrivateFieldGet(this, _Particles_engine, \"f\").plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n            __classPrivateFieldGet(this, _Particles_engine, \"f\").dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this.applyDensity(options.particles.groups[group], 0, group);\n        }\n        this.applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this.initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle(__classPrivateFieldGet(this, _Particles_engine, \"f\"), this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            __classPrivateFieldGet(this, _Particles_engine, \"f\").dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n_Particles_engine = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}